package com.study.LXF01.Package03OOP;

public abstract class OOPAbstract {
    public abstract void method();
}

/**
 * 面向对象的本质就是：
 *  上层的代码只定义规范
 *  不需要子类就可以实现业务逻辑（正常编译）
 *  具体的业务逻辑由不同的子类实现，调用者并不关心
 *
 * 小结：
 *  通过 abstract定义的方法是抽象方法，它只有定义，没有实现，抽象方法定义了子类必须实现的接口规范
 *  定义了抽象方法的 class必须被定义为抽象类，从抽象类继承的子类必须实现抽象方法
 *  如果不实现抽象方法，则该子类仍是一个抽象类
 *  面向抽象编程使得调用者只关心抽象方法的定义，不关心子类的具体实现
 */
